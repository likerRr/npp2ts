"use strict";
var wf = require('writefile');
var DrawerManager = (function () {
    function DrawerManager(drawers) {
        this.drawers = [];
        this.drawers = drawers;
    }
    DrawerManager.prototype.saveToFile = function (fileName) {
        var lines = [];
        lines.push("\n/**\n * Automatically generated by npp2ts \n */\n");
        lines.push("\n/**\n * @see https://htmlpreview.github.io/?https://raw.githubusercontent.com/dcodeIO/protobuf.js/master/docs/ProtoBuf.Builder.Message.html\n */\ndeclare abstract class ProtoBufMessage {\n  static decode64(str?: string): any;\n  static decodeDelimited(buffer?: ByteBuffer | ArrayBuffer | Buffer | string, enc?: string): any;\n  static decodeHex(str?: string): any;\n  static decodeJSON(str?: string): any;\n\n  add(key: string, value: any, noAssert?: boolean): any;\n  calculate(): number;\n  encode(buffer?, noVerify?: boolean): any;\n  encode64(): string;\n  encodeAB(): any;\n  encodeDelimited(buffer?: ByteBuffer | boolean, noVerify?: boolean);\n  encodeHex(): string;\n  encodeJSON(): string;\n  encodeNB(): any;\n  get(key: string, noAssert?: boolean): any;\n  set(value: any, noAssert?: boolean): any;\n  toArrayBuffer(): ArrayBuffer;\n  toBase64(): string;\n  toBuffer(): any;\n  toHex(): any;\n  toRaw(): any;\n  toString(): string;\n}\n");
        lines.push.apply(lines, this.drawers.map(function (entity) { return entity.draw(); }));
        wf(fileName, lines.join('\n'));
    };
    return DrawerManager;
}());
exports.DrawerManager = DrawerManager;
//# sourceMappingURL=drawer-manager.js.map