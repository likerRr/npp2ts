"use strict";
class DrawerManager {
    constructor(drawers) {
        this.drawers = [];
        this.drawers = drawers;
    }
    makeTemplate() {
        const lines = [];
        lines.push(`
/**
 * Automatically generated by npp2ts 
 */
`);
        lines.push(`
/**
 * @see https://htmlpreview.github.io/?https://raw.githubusercontent.com/dcodeIO/protobuf.js/master/docs/ProtoBuf.Builder.Message.html
 */
declare abstract class ProtoBufMessage {
  static decode64(str?: string): any;
  static decodeDelimited(buffer?: ByteBuffer | ArrayBuffer | Buffer | string, enc?: string): any;
  static decodeHex(str?: string): any;
  static decodeJSON(str?: string): any;

  add(key: string, value: any, noAssert?: boolean): any;
  calculate(): number;
  encode(buffer?, noVerify?: boolean): any;
  encode64(): string;
  encodeAB(): any;
  encodeDelimited(buffer?: ByteBuffer | boolean, noVerify?: boolean);
  encodeHex(): string;
  encodeJSON(): string;
  encodeNB(): any;
  get(key: string, noAssert?: boolean): any;
  set(value: any, noAssert?: boolean): any;
  toArrayBuffer(): ArrayBuffer;
  toBase64(): string;
  toBuffer(): any;
  toHex(): any;
  toRaw(): any;
  toString(): string;
}
`);
        lines.push(...this.drawers.map(entity => entity.draw()));
        return lines.join('\n');
    }
}
exports.DrawerManager = DrawerManager;
//# sourceMappingURL=drawer-manager.js.map